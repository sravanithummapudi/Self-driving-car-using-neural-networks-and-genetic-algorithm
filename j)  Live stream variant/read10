Instructions:

Call the save() and discard() methods in the browser console when you want to store a car's brain in local storage.
Play with the number of cars simulated in parallel N (line 9) and the mutation amount (line 0.4)
Changing properties of the neural network or the sensor requires you to call discard() in the console so that the old ones don't come from local storage.



"mutation" refers to the process of introducing random changes to the biases and weights of a neural network used in a self-driving car simulation. 
These changes are intended to introduce variability and potentially alter the behavior and performance of the simulated self-driving car.
The mutations are generated by calculating a random value between -1 and 1 using Math.random() * 2 - 1. This random value is then used in the linear
interpolation (lerp) function along with the current value of the bias or weight and the mutation amount (amount). The result of the linear interpolation 
is a mutated value that replaces the original value in the neural network.
By mutating the biases and weights of the neural network, the simulation can explore different parameter configurations, allowing the self-driving car 
to potentially adapt and improve its decision-making based on the variations introduced. 
In a self-driving car simulation, an artificial neural network (ANN) is a computational model inspired by the structure and functioning of biological 
neural networks in the human brain. ANN plays a crucial role in enabling the car to perceive its environment, make decisions, and control its actions.
Here's a general overview of how an ANN is used in a self-driving car simulation:
Input Data: The self-driving car simulation captures data about its environment through various sensors, such as cameras, LiDAR, radar, or GPS. 
This data is fed into the input layer of the neural network.
Layers and Neurons: The neural network is composed of multiple layers, including an input layer, one or more hidden layers, and an output layer.
Each layer consists of neurons or nodes that perform computations.
Weighted Connections: The connections between neurons are represented by weights, which determine the strength of the signal transmitted from one neuron
to the next. Initially, these weights are randomly assigned.
Forward Propagation: The input data is propagated forward through the neural network in a process known as forward propagation.
Each neuron in a layer receives inputs from the previous layer, performs a weighted sum of the inputs, applies an activation function, 
and passes the output to the next layer.
Output: The output layer of the neural network produces predictions or decisions based on the processed input data.
In a self-driving car simulation, the output could represent actions such as accelerating, braking, or steering.
